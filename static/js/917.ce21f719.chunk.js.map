{"version":3,"file":"static/js/917.ce21f719.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactItem/ContactItem.js","redux/filter/selectors.js","components/ContactsList/ContactsList.js","hooks/useFilter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","hooks/useContacts.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const selectError = state => state.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    return dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <div>\n      <p>\n        {contact.name}: {contact.number}\n      </p>\n      <button onClick={handleDelete}>Delete contact</button>\n    </div>\n  );\n};\n","export const selectFilter = state => state.filter;\n","import { useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport css from './ContactsList.module.css';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useFilter } from 'hooks/useFilter';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const filter = useFilter();\n\n  const visibleContacts = contacts.filter(contact => {\n    return filter\n      ? contact.name.toLowerCase().includes(filter.toLowerCase())\n      : contact;\n  });\n\n  return (\n    <>\n      {Array.isArray(visibleContacts) && (\n        <ul className={css.list}>\n          {visibleContacts.map(contact => {\n            return (\n              <li key={contact.id}>\n                <ContactItem contact={contact} />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const useFilter = () => {\n  const filter = useSelector(selectFilter);\n  return filter;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"divStyled\":\"ContactForm_divStyled__rJrxR\",\"inputStyled\":\"ContactForm_inputStyled__QcFyP\",\"formStyled\":\"ContactForm_formStyled__LeIxo\",\"labelStyled\":\"ContactForm_labelStyled__+IbBa\",\"buttonStyled\":\"ContactForm_buttonStyled__R-c2u\",\"errorMessage\":\"ContactForm_errorMessage__HbfEx\"};","import { useContacts } from 'hooks/useContacts';\nimport React from 'react';\nimport { ErrorMessage, Formik, Field, Form } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport toast from 'react-hot-toast';\nimport css from './ContactForm.module.css';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst scheme = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('This field is Required'),\n  number: yup\n    .string()\n    .required('This field is Required')\n    .min(6, 'Too Short!')\n    .max(13, 'Too Long!')\n    .matches(\n      /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\n      'Phone number is not valid'\n    ),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useContacts();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n\n\n    if (name === '' || number === '' || name.includes('  ')) {\n      return toast.error('Form is still empty !');\n    }\n    if (contacts.find(contact => contact.name === name)) {\n      return toast.error(`${name} is already in list`);\n    }\n\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        validationSchema={scheme}\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n      >\n        <>\n          <div className={css.divStyled}>\n            <Form autoComplete=\"off\" className={css.formStyled}>\n              <label htmlFor=\"name\" className={css.labelStyled}>\n                Name\n                <Field type=\"input\" name=\"name\" className={css.inputStyled} />\n                <ErrorMessage\n                  name=\"name\"\n                  component=\"div\"\n                  className={css.errorMessage}\n                />\n              </label>\n\n              <label htmlFor=\"number\" className={css.labelStyled}>\n                Phone number\n                <Field type=\"tel\" name=\"number\" className={css.inputStyled} />\n                <ErrorMessage\n                  name=\"number\"\n                  component=\"div\"\n                  className={css.errorMessage}\n                />\n              </label>\n              <button type=\"submit\" className={css.buttonStyled}>\n                Add contact\n              </button>\n            </Form>\n          </div>\n        </>\n      </Formik>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectAllContacts);\n  return contacts;\n};\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/operations';\n\nexport const Filter = props => {\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Formik>\n      <form\n        autoComplete=\"off\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          paddingBottom: '10px',\n        }}\n      >\n        <h4\n          style={{\n            fontSize: '16px',\n            letterSpacing: '.1rem',\n            fontWeight: 700,\n            fontFamily: 'monospace',\n          }}\n        >\n          Filter\n        </h4>\n        <input\n          type=\"input\"\n          name=\"filter\"\n          onChange={onChange}\n          value={props.value}\n        />\n      </form>\n    </Formik>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { Container } from '@mui/material';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container maxWidth=\"lg\">\n        <h1\n          style={{\n            display: 'grid',\n            maxWidth: 'fit-content',\n            margin: '0 auto',\n            padding: '16px',\n          }}\n        >\n          Phonebook\n        </h1>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-evenly',\n            marginTop: '20px',\n          }}\n        >\n          <ContactForm />\n          <div>\n            <Filter />\n            {isLoading && <b>'Request in progress...'</b>}\n            <ContactsList />\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","isLoading","selectAllContacts","items","ContactItem","contact","dispatch","useDispatch","name","number","onClick","deleteContact","id","selectFilter","filter","ContactsList","useSelector","visibleContacts","toLowerCase","includes","Array","isArray","className","css","map","initialValues","scheme","yup","shape","min","max","required","matches","ContactForm","validationSchema","onSubmit","values","resetForm","toast","find","addContact","autoComplete","htmlFor","type","component","Filter","props","style","display","flexDirection","paddingBottom","fontSize","letterSpacing","fontWeight","fontFamily","onChange","e","setFilter","target","value","Contacts","useEffect","fetchContacts","Container","maxWidth","margin","padding","justifyContent","marginTop"],"sourceRoot":""}